//
// Generated file, do not edit! Created by opp_msgtool 6.1 from CompletingAWrite.msg.
//

#ifndef __COMPLETINGAWRITE_M_H
#define __COMPLETINGAWRITE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class CompletingAWrite;
/**
 * Class generated from <tt>CompletingAWrite.msg:19</tt> by opp_msgtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message CompletingAWrite
 * {
 *     int iteration;
 *     int remainingBytesToWrite;
 *     int processId;
 *     double chunkWriteTimes[];
 * }
 * </pre>
 */
class CompletingAWrite : public ::omnetpp::cMessage
{
  protected:
    int iteration = 0;
    int remainingBytesToWrite = 0;
    int processId = 0;
    double *chunkWriteTimes = nullptr;
    size_t chunkWriteTimes_arraysize = 0;

  private:
    void copy(const CompletingAWrite& other);

  protected:
    bool operator==(const CompletingAWrite&) = delete;

  public:
    CompletingAWrite(const char *name=nullptr, short kind=0);
    CompletingAWrite(const CompletingAWrite& other);
    virtual ~CompletingAWrite();
    CompletingAWrite& operator=(const CompletingAWrite& other);
    virtual CompletingAWrite *dup() const override {return new CompletingAWrite(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getIteration() const;
    virtual void setIteration(int iteration);

    virtual int getRemainingBytesToWrite() const;
    virtual void setRemainingBytesToWrite(int remainingBytesToWrite);

    virtual int getProcessId() const;
    virtual void setProcessId(int processId);

    virtual void setChunkWriteTimesArraySize(size_t size);
    virtual size_t getChunkWriteTimesArraySize() const;
    virtual double getChunkWriteTimes(size_t k) const;
    virtual void setChunkWriteTimes(size_t k, double chunkWriteTimes);
    virtual void insertChunkWriteTimes(size_t k, double chunkWriteTimes);
    [[deprecated]] void insertChunkWriteTimes(double chunkWriteTimes) {appendChunkWriteTimes(chunkWriteTimes);}
    virtual void appendChunkWriteTimes(double chunkWriteTimes);
    virtual void eraseChunkWriteTimes(size_t k);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CompletingAWrite& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CompletingAWrite& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline CompletingAWrite *fromAnyPtr(any_ptr ptr) { return check_and_cast<CompletingAWrite*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __COMPLETINGAWRITE_M_H

