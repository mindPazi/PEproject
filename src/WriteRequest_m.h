//
// Generated file, do not edit! Created by opp_msgtool 6.1 from WriteRequest.msg.
//

#ifndef __WRITEREQUEST_M_H
#define __WRITEREQUEST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class WriteRequest;
/**
 * Class generated from <tt>WriteRequest.msg:19</tt> by opp_msgtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet WriteRequest
 * {
 *     int bytesToWrite; //B
 *     char fileName;		//Nome file del tipo: fileA, fileB,....
 *     int processId; //Id del processo
 * }
 * </pre>
 */
class WriteRequest : public ::omnetpp::cPacket
{
  protected:
    int bytesToWrite = 0;
    char fileName = 0;
    int processId = 0;

  private:
    void copy(const WriteRequest& other);

  protected:
    bool operator==(const WriteRequest&) = delete;

  public:
    WriteRequest(const char *name=nullptr, short kind=0);
    WriteRequest(const WriteRequest& other);
    virtual ~WriteRequest();
    WriteRequest& operator=(const WriteRequest& other);
    virtual WriteRequest *dup() const override {return new WriteRequest(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getBytesToWrite() const;
    virtual void setBytesToWrite(int bytesToWrite);

    virtual char getFileName() const;
    virtual void setFileName(char fileName);

    virtual int getProcessId() const;
    virtual void setProcessId(int processId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WriteRequest& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WriteRequest& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline WriteRequest *fromAnyPtr(any_ptr ptr) { return check_and_cast<WriteRequest*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __WRITEREQUEST_M_H

